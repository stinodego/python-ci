[tool.poetry]
name = "mypackage"
version = "0.1.0"
description = ""
authors = ["Stijn de Gooijer <stijn@degooijer.io>"]
repository = "https://github.com/stinodego/python-cookiecutter"
readme = "README.md"
packages = [
    { include = "mypackage", from = "src" }
]

[tool.poetry.scripts]
mycli = 'mypackage.main:main'

[tool.poetry.dependencies]
python = "^3.10"
polars = "^0.14.14"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
pytest-mock = "^3.7.0"
coverage = "^6.5.0"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^2.20.0"

[tool.poetry.group.lint]
optional = true
[tool.poetry.group.lint.dependencies]
black = "^22.10.0"
isort = "^5.10.1"
flake8 = "^5.0.4"
flake8-bugbear = "^22.7.1"
flake8-comprehensions = "^3.10.0"
flake8-docstrings = "^1.6.0"
flake8-simplify = "^0.19.3"
flake8-tidy-imports = "^4.8.0"
mypy = "^0.991"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line_length = 88
target_version = ["py310"]

[tool.isort]
line_length = 88
profile = "black"
force_single_line = true

[tool.mypy]
files = "src"
mypy_path = "src"
python_version = "3.10"
namespace_packages = true
show_error_codes = true
strict = true
enable_error_code = [
  "redundant-expr",
  "truthy-bool",
  "ignore-without-code",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]
