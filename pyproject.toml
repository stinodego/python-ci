[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mypackage"
version = "0.1.0"
description = ""
authors = ["Stijn de Gooijer <stijn@degooijer.io>"]
repository = "https://github.com/stinodego/python-cookiecutter"
readme = "README.md"
packages = [{include = "mypackage", from = "src"}]

[tool.poetry.scripts]
mycli = 'mypackage.main:main'

[tool.poetry.dependencies]
python = ">=3.11"
polars = "^1.4.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.1"
pytest-mock = "^3.14.0"
coverage = "^7.5.3"

[tool.poetry.group.lint.dependencies]
pre-commit = "^3.7.1"
ruff = "^0.4.6"
mypy = "^1.10.0"

[tool.ruff]
src = ["src"]
line-length = 88
target-version = "py311"
fix = true

[tool.ruff.lint]
select = [
  "F",  # Pyflakes
  "E",  # pycodestyle
  "W",  # pycodestyle
  "I",  # isort
  "D",  # pydocstyle
  "UP",  # pyupgrade
  "S",  # flake8-bandit
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "SIM",  # flake8-simplify
  "TID",  # flake8-tidy-imports
  "RUF",  # Ruff-specific rules
]
ignore = [
  # Line length regulated by ruff formatter
  "E501",
  # Docstrings not required
  "D1",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
files = "src"
mypy_path = "src"
python_version = "3.11"
strict = true
enable_error_code = [
  "redundant-expr",
  "truthy-bool",
  "ignore-without-code",
]

[tool.pytest.ini_options]
addopts = [
  "--import-mode=importlib",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_also = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
]
